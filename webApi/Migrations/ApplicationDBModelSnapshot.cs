// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webApi;

#nullable disable

namespace webApi.Migrations
{
    [DbContext(typeof(ApplicationDB))]
    partial class ApplicationDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("webApi.Data.Acuario", b =>
                {
                    b.Property<int>("AcuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcuarioID"), 1L, 1);

                    b.Property<string>("Nombre_Acuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("maximo_visitantes")
                        .HasColumnType("int");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AcuarioID");

                    b.ToTable("Acuarios");
                });

            modelBuilder.Entity("webApi.Data.Pecera", b =>
                {
                    b.Property<int>("PeceraID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeceraID"), 1L, 1);

                    b.Property<int>("AcuarioID")
                        .HasColumnType("int");

                    b.Property<int>("Capacidad_LitrosAgua")
                        .HasColumnType("int");

                    b.Property<int>("Capacidad_Peces")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Pecera")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeceraID");

                    b.HasIndex("AcuarioID");

                    b.ToTable("Peceras");
                });

            modelBuilder.Entity("webApi.Data.Pecera", b =>
                {
                    b.HasOne("webApi.Data.Acuario", "Acuario")
                        .WithMany("Peceras")
                        .HasForeignKey("AcuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acuario");
                });

            modelBuilder.Entity("webApi.Data.Acuario", b =>
                {
                    b.Navigation("Peceras");
                });
#pragma warning restore 612, 618
        }
    }
}
